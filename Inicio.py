import streamlit as st

st.set_page_config(
    page_title="OmniChat: Laboratorio de IA", page_icon="ü§ñ", layout="wide"
)

st.header("OmniChat: Laboratorio de Herramientas de IA")

st.write(
    """
[![ver c√≥digo fuente](https://img.shields.io/badge/Repositorio%20GitHub-gris?logo=github)](https://github.com/bladealex9848/OmniChat)
![Visitantes](https://api.visitorbadge.io/api/visitors?path=https%3A%2F%2Fomnichat.streamlit.app&label=Visitantes&labelColor=%235d5d5d&countColor=%231e7ebf&style=flat)
"""
)

# Informaci√≥n sobre el autor en la barra lateral
st.sidebar.markdown("### Desarrollado por")
st.sidebar.markdown("Alexander Oviedo Fadul")
st.sidebar.markdown(
    "[GitHub](https://github.com/bladealex9848) | [LinkedIn](https://www.linkedin.com/in/alexanderoviedo/)"
)

# Versi√≥n de la aplicaci√≥n
st.sidebar.markdown("### Versi√≥n")
st.sidebar.markdown("v1.0.0")

# Enlaces √∫tiles
st.sidebar.markdown("### Enlaces √∫tiles")
st.sidebar.markdown("[Documentaci√≥n de Mistral AI](https://docs.mistral.ai/)")
st.sidebar.markdown("[Documentaci√≥n de Streamlit](https://docs.streamlit.io/)")
st.sidebar.markdown("[Documentaci√≥n de OpenAI](https://platform.openai.com/docs)")


st.write(
    """
OmniChat es un asistente virtual vers√°til basado en Langchain, un poderoso framework dise√±ado para simplificar el desarrollo de aplicaciones utilizando Modelos de Lenguaje (LLMs). Langchain proporciona una integraci√≥n completa de varios componentes, facilitando el proceso de ensamblarlos para crear aplicaciones robustas.

Aprovechando el poder de Langchain, la creaci√≥n de chatbots se vuelve sencilla. Aqu√≠ hay algunos ejemplos de implementaciones de chatbot que atienden diferentes casos de uso:

- **Chatbot B√°sico**: Participa en conversaciones interactivas con el LLM.
- **Chatbot Consciente del Contexto**: Un chatbot que recuerda conversaciones previas y proporciona respuestas en consecuencia.
- **Chatbot con Acceso a Internet**: Un chatbot habilitado para internet capaz de responder consultas de usuarios sobre eventos recientes.
- **Chat con tus Documentos**: Potencia el chatbot con la capacidad de acceder a documentos personalizados, permiti√©ndole proporcionar respuestas a consultas de usuarios basadas en la informaci√≥n referenciada.
- **Chat con Base de Datos SQL**: Permite al chatbot interactuar con una base de datos SQL a trav√©s de comandos conversacionales simples.
- **Chat con Sitios Web**: Permite al chatbot interactuar con contenidos de sitios web.
- **Chat Multimodal**: Analiza im√°genes y responde preguntas sobre ellas usando modelos multimodales gratuitos de OpenRouter.
- **OCR con Mistral AI**: Extrae texto de im√°genes y documentos PDF utilizando la API de OCR de Mistral AI.

Para explorar ejemplos de uso de cada herramienta, por favor navega a la secci√≥n correspondiente en la barra lateral.
"""
)

# Secci√≥n sobre Mistral OCR
st.subheader("üîç Mistral OCR - Nueva funcionalidad")

st.markdown(
    """
Este laboratorio ahora incluye una nueva herramienta para extracci√≥n de texto de im√°genes y documentos PDF
usando la API de OCR (Reconocimiento √ìptico de Caracteres) de Mistral AI.

### Caracter√≠sticas principales

- **Extracci√≥n de texto** de im√°genes (JPG, PNG) y documentos PDF
- **Preservaci√≥n de la estructura** y formato del texto extra√≠do
- **Optimizaci√≥n autom√°tica** de im√°genes para mejorar resultados
- **Descarga de resultados** en m√∫ltiples formatos (TXT, JSON, Markdown)
- **Sistema de respaldo** para b√∫squedas en internet cuando DuckDuckGo alcanza l√≠mites de tasa

### Limitaciones

- **Tama√±o m√°ximo de archivo**: 50 MB
- **M√°ximo de p√°ginas por PDF**: 1,000 p√°ginas
- **Formatos soportados**: PDF, JPG, PNG
- **Procesamiento desde URL**: En desarrollo
"""
)

# Mostrar informaci√≥n sobre el sistema de respaldo para b√∫squedas
with st.expander("‚ÑπÔ∏è Sistema de respaldo para b√∫squedas en internet"):
    st.markdown(
        """
    ### Herramientas de b√∫squeda con respaldo

    Este laboratorio implementa un sistema de respaldo para b√∫squedas en internet cuando DuckDuckGo alcanza l√≠mites de tasa:

    1. **DuckDuckGo** (principal)
    2. **Serper.dev** (respaldo, requiere API key)
    3. **SerpAPI** (respaldo, requiere API key)
    4. **Scraping directo** (respaldo final)
    5. **Google Search API** (opcional, requiere configuraci√≥n)

    Si experimentas errores de "rate limit" al usar el Chatbot con Acceso a Internet, el sistema intentar√° usar
    autom√°ticamente los m√©todos alternativos de b√∫squeda.
    """
    )
